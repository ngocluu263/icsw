#!/usr/bin/python-init -Ot
# -*- coding: iso-8859-1 -*-
#
# Copyright (C) 2005,2007 Andreas Lang, init.at
#
# Send feedback to: <lang@init.at>
# 
# This file is part of rms-tools
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License Version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

import sys
import time
import os
import commands
import re
import sge_license_tools
import logging_tools

def main():
    # change IO-descriptors
    sge_stdout, sge_stderr = (sys.stdout, sys.stderr)
    base_dir = "/etc/sysconfig/licenses"
    my_pid = os.getpid()
    if not os.environ.has_key("SGE_ROOT"):
        print "Error, no SGE_ROOT environment variable set"
        sys.exit(1)
    if not os.environ.has_key("SGE_CELL"):
        print "Error, no SGE_CELL environment variable set"
        sys.exit(1)
    sge_root, sge_cell = (os.environ["SGE_ROOT"],
                          os.environ["SGE_CELL"])
    arch_util = "%s/util/arch" % (sge_root)
    if not os.path.isfile(arch_util):
        print "No arch-utility found in %s/util" % (sge_root)
        sys.exit(1)
    sge_arch = commands.getoutput(arch_util)
    act_site = sge_license_tools.read_default_site_file(base_dir, sge_license_tools.ACT_SITE_NAME)
    if not act_site:
        print "Actual site not defined, exiting..."
        sys.exit(1)
    act_conf = sge_license_tools.DEFAULT_CONFIG
    sge_license_tools.parse_site_config_file(base_dir, act_site, act_conf)
    qstat_bin = "%s/bin/%s/qstat" % (sge_root, sge_arch)
    actual_licenses = sge_license_tools.parse_license_lines(sge_license_tools.read_site_license_file(base_dir, act_site), act_site)
    stat, out = commands.getstatusoutput("%s -F" % (qstat_bin))
    if stat:
        print "Error calling qstat -F"
        sys.exit(1)
    gc_lines = [tuple(x.strip()[3:].split("=", 1)) for x in out.split("\n") if x.strip().startswith("gc:")]
    for gc_name, gc_uc in gc_lines:
        if actual_licenses.has_key(gc_name):
            act_lic = actual_licenses[gc_name]
            act_lic.set_used_num(act_lic.get_total_num() - int(gc_uc))
    lic_names = actual_licenses.keys()
    lic_names.sort()
    print "Found %s:" % (logging_tools.get_plural("license", len(lic_names)))
    for lic_name in lic_names:
        act_lic = actual_licenses[lic_name]
        print "%-25s : %3d used of %3d" % (lic_name,
                                           act_lic.get_used_num(),
                                           act_lic.get_total_num())

if __name__ == "__main__":
    main()
    
