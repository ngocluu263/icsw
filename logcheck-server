#! /bin/bash
#
# Copyright (c) 2001-2006,2012-2014 Andreas Lang-Nevyjel, lang-nevyjel@init.at
#
# RedHat stuff
# chkconfig: 35 77 23
# description: logcheck-server
#
### BEGIN INIT INFO
# Provides:      logcheck-server
# Required-Start: $network logging-server
# Required-Stop: $network logging-server
# Should-Start: mysql postgresql
# Default-Start: 2 3 5
# Default-Stop: 0 1 6
# Description:   start logcheck-server
### END INIT INFO

export SYSTEMD_NO_WRAP="1"
if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi
# source /etc/sysconfig/logcheck-server
. /etc/sysconfig/logcheck-server
. /etc/init.d/ics_tools.sh

SERVER_BIN=/opt/cluster/sbin/logcheck-server.py
PYTHON_BIN=/usr/bin/python-init
SERVER_PID=/var/run/logcheck-server/logcheck-server.pid
SERVER_USER="idlog"
SERVER_GROUP="idg"
META_FILE="/var/lib/meta-server/logcheck-server"

test -x ${SERVER_BIN} || exit 5
test -x ${PYTHON_BIN} || exit 5

rc_reset

export HOSTNAME=`/bin/hostname`
case "$1" in
    start)
        echo -n "Starting logcheck-server"
        if [ -f ${SERVER_PID} ] ; then
            echo -n " ... already running"
        else
            ${SERVER_BIN} ${SERVER_ARGS}
        fi
        rc_status -v
        ;;
    stop)
        echo -n "Stopping logcheck-server.py"
        if [ -f ${SERVER_PID} ] ; then
            kill -s 15 `cat ${SERVER_PID} | head -n 1`  || rc_failed
        else
            rc_failed
        fi
        rm -f ${SERVER_PID}
        rc_status -v
        ;;
    force-stop)
        echo -n "Force stopping logcheck-server.py"
        if [ -f ${SERVER_PID} ] ; then
            kill -9 `cat ${SERVER_PID} ` || rc_failed
        else
            rc_failed
        fi
        rm -f ${SERVER_PID} ${META_FILE}
        rc_status -v
        ;;
    status)
        echo -n "Checking logcheck-server.py..."
        check_threads_ok && {
            rc_status -v ; 
        } || {
            if ${SERVER_BIN} -C ; then
                check_threads || rc_failed 
                rc_status -v
            else
                rc_status -s
            fi
        } 
    ;;
    restart)
        echo "Restarting $(basename $SERVER_BIN)"
        $0 stop && sleep 2 ; $0 start || return=$rc_failed
        ;;
    force-restart)
        echo "Restarting $(basename $SERVER_BIN)"
        $0 force-stop && sleep 2 ; $0 start || return=$rc_failed
        ;;
    *)
        echo "Usage: $0 {start|stop|status|force-stop|restart|force-restart}"
        exit 1
    ;;
esac

rc_exit
