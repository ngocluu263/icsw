#! /bin/sh
#
# Copyright (c) 2003,2004,2005,2006,2007,2008,2011,2012 Andreas Lang-Nevyjel init.at
#
#
# RedHat stuff
# chkconfig: 2345 13 87
# description: logging-server
#
### BEGIN INIT INFO
# Provides:      logging-server
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description:   starts logging-server
### END INIT INFO

export SYSTEMD_NO_WRAP="1"
if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi
. /etc/init.d/ics_tools.sh

function setup() {
    [ ! -d /var/run/logserver ] && mkdir /var/run/logserver 
    [ ! -d /var/lock/logserver ] && mkdir /var/lock/logserver 
    chmod 0750 /var/run/logserver
    chown idlog.idg /var/run/logserver /var/lock/logserver 
}

SERVER_BIN=/opt/cluster/sbin/logging-server.py
PYTHON_BIN=/opt/python-init/bin/python
SERVER_PID=/var/run/logserver/logserver.pid
SERVER_ARGS=""
SERVER_USER="idlog"
SERVER_GROUP="idg"

test -x ${SERVER_BIN} || exit 5
test -x ${PYTHON_BIN} || exit 5

rc_reset

setup()

#id ${SERVER_USER} > /dev/null || { echo "User ${SERVER_USER} for ${SERVER_BIN} not found, exiting..." ; rc_failed 6 ; rc_exit ; }
#[ "`id ${SERVER_USER} -g -n`" != "${SERVER_GROUP}" ] && { echo "Group ${SERVER_GROUP} for ${SERVER_BIN} not found, exiting..." ; rc_failed 6 ; rc_exit ; }

export HOSTNAME=`/bin/hostname`
case "$1" in
    start)
        echo -n "Starting logging-server.py"
        check_threads_ok $SERVER_PID && {
            echo -n " ... already running"
        } || {
            ${SERVER_BIN} ${SERVER_ARGS} -u ${SERVER_USER} -g ${SERVER_GROUP}
        }
        rc_status -v
    ;;
    stop)
        echo -n "Stopping logging-server.py"
        if [ -f ${SERVER_PID} ] ; then
            kill -s 15 `cat ${SERVER_PID} | head -n 1`
            for i in $(seq 10) ; do
                echo -n "."
                if [ -x /bin/usleep ] ; then
                    usleep 250000
                else
                    sleep 1
                fi
                [ ! -f ${SERVER_PID} ] && break 
            done
            [ $i -gt 8 ] && rc_failed || rc_reset
        else
            rc_failed
        fi
        rc_status -v
    ;;
    force-stop)
        echo -n "Force stopping logging-server.py"
        if [ -f ${SERVER_PID} ] ; then
            kill -9 `cat ${SERVER_PID} ` || rc_failed
        else
            rc_failed
        fi
        rm -f ${SERVER_PID}
        rc_status -v
    ;;
    status)
        echo -n "Checking logging-server.py..."
        check_threads_ok ${SERVER_PID} || {
            check_threads ${SERVER_PID} || rc_failed 
        } 
        rc_status -v
    ;;
    restart)
        echo "Restarting $(basename $SERVER_BIN)"
        $0 stop ; sleep 1 ; $0 start || return=$rc_failed
    ;;
    force-restart)
        echo "Restarting $(basename $SERVER_BIN)"
        $0 force-stop ; sleep 1 ; $0 start || return=$rc_failed
    ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|force-stop|force-restart}"
        exit 1
    ;;
esac

rc_exit
