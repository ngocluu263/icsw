#! /bin/sh
#
# Copyright (c) 2002,2003,2004,2005,2006 lang@init.at
#
#
# RedHat stuff
# chkconfig: 2345 14 86
# description: host-monitoring services
#
### BEGIN INIT INFO
# Provides:      host-monitoring
# Required-Start: $network $syslog logging-server
# Required-Stop: $network $syslog logging-server
# Should-Start: lm_sensors
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description:   start host-monitoring services
### END INIT INFO

export SYSTEMD_NO_WRAP="1"
if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi
. /etc/sysconfig/host-monitoring
. /etc/init.d/ics_tools.sh

HOSTMON_BIN=/usr/local/sbin/host-monitoring.py
SERVER_BIN=/usr/local/sbin/collserver.py
PYTHON_BIN=/opt/python-init/bin/python
SERVER_PID=/var/run/collserver/collserver.pid
META_FILE=/var/lib/meta-server/collserver
SERVER_DIRS="/var/run/collserver"

test -x ${HOSTMON_BIN} || exit 5
test -x ${SERVER_BIN} || exit 5
test -x ${PYTHON_BIN} || exit 5

rc_reset

export HOSTNAME=`/bin/hostname`
case "$1" in
    start)     
	echo -n "Starting collserver.py"
	if [ -f ${SERVER_PID} ] ; then
	    echo -n " ... already running"
	else
	    for dir in $SERVER_DIRS ; do
		[ ! -d "${dir}" ] && mkdir -p ${dir}
	    done
	    ${SERVER_BIN} ${SERVER_ARGS}
	fi
	rc_status -v
	;;
    stop)
	echo -n "Stopping collserver.py"
	if [ -f ${SERVER_PID} ] ; then
	    kill -s 15 `cat ${SERVER_PID} | head -n 1` || rc_failed
	    if [ -f ${SERVER_PID} ] ; then
		for i in $(seq 20) ; do
		    true 
		    echo -n "."
		    if [ -x /bin/usleep ] ; then
			usleep 250000
		    else
			sleep 1
		    fi
		    [ ! -f ${SERVER_PID} ] && break 
		done
	    fi
	    [ $i -gt 18 ] && rc_failed || rc_reset
	else
	    rc_failed
	fi
	rc_status -v
	;;
    force-stop)
	echo -n "Force stopping collserver.py"
	if [ -f ${SERVER_PID} ] ; then
	    kill -9 `cat ${SERVER_PID} ` || rc_failed
	else
	    rc_failed
	fi
	rm -f ${SERVER_PID} ${META_FILE}
	rc_status -v
	;;
    status)
	echo -n "Checking collserver.py..."
	check_threads_ok ${SERVER_PID} || {
	    check_threads ${SERVER_PID} || rc_failed 
	} 
	rc_status -v
	;;
    restart)
	echo "Restarting $(basename $SERVER_BIN)"
	$0 stop ; sleep 1 ; $0 start || return=$rc_failed
	;;
    force-restart)
	echo "Restarting $(basename $SERVER_BIN)"
	$0 force-stop ; sleep 1 ; $0 start || return=$rc_failed
	;;
    *)
	echo "Usage: $0 {start|stop|restart|status|force-stop|force-restart}"
	exit 1
	;;
esac

rc_exit


