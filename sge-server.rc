#! /bin/sh
#
# Copyright (c) 2003,2004,2005,2006,2012 init.at
#
#
# RedHat stuff
# chkconfig: 2345 80 20
# description: sge-server service
#
### BEGIN INIT INFO
# Provides:      sge-server
# Required-Start: $network $syslog mysql meta-server
# Required-Stop: $network $syslog mysql meta-server
# Should-Start: sgemaster
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description:   start sge-server service
### END INIT INFO

export SYSTEMD_NO_WRAP="1"
if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi
. /etc/init.d/ics_tools.sh

SERVER_BIN=/opt/cluster/sbin/sge-server.py
SERVER_PID=/var/run/sge-server/sge-server.pid
PYTHON_BIN=/usr/bin/python-init
SERVER_DIRS="/var/run/sge-server"
SERVER_ARGS=""
META_FILE="/var/lib/meta-server/sge-server"

test -x ${SERVER_BIN} || exit 5
test -x ${PYTHON_BIN} || exit 5

rc_reset

export HOSTNAME=`/bin/hostname`
case "$1" in
    start)
		echo -n "Starting sge-server.py"
		if [ -f ${SERVER_PID} ] ; then
			echo -n " ... already running"
		else
			for dir in $SERVER_DIRS ; do
				[ ! -d "${dir}" ] && mkdir -p ${dir}
			done
			${SERVER_BIN} ${SERVER_ARGS}
		fi
		rc_status -v
		;;
    stop)
		echo -n "Stopping sge-server.py"
		if [ -f ${SERVER_PID} ] ; then
			kill -s 15 `cat ${SERVER_PID} | head -n 1` || rc_failed
		else
			rc_failed
		fi
		rm -f ${SERVER_PID}
		rc_status -v
		;;
    force-stop)
		echo -n "Force stopping sge-server.py"
		if [ -f ${SERVER_PID} ] ; then
			kill -9 `cat ${SERVER_PID} ` || rc_failed
		else
			rc_failed
		fi
		rm -f ${SERVER_PID} ${META_FILE}
		rc_status -v
		;;
    status)
		echo -n "Checking sge-server.py..."
		check_threads_ok && {
			rc_status -v ; 
		} || {
			if ${SERVER_BIN} -C ; then
				check_threads || rc_failed 
				rc_status -v
			else
				rc_status -s
			fi
		} 
		;;
    reload)
		echo "Reloading $(basename $SERVER_BIN)"
		if [ -f ${SERVER_PID} ] ; then
			kill -HUP `cat ${SERVER_PID} | head -n 1` || rc_failed
		else
			rc_failed
		fi
		;;
    restart)
		echo "Restarting $(basename $SERVER_BIN)"
		$0 stop && sleep 2 ; $0 start || return=$rc_failed
		;;
    force-restart)
		echo "Restarting $(basename $SERVER_BIN)"
		$0 force-stop && sleep 2 ; $0 start || return=$rc_failed
		;;
		*)
		echo "Usage: $0 {start|stop|reload|status|force-stop|restart|force-restart}"
		exit 1
		;;
esac

rc_exit


