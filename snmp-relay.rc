#! /bin/sh
#
# Copyright (c) 2009 init.at
#
#
# RedHat stuff
# chkconfig: 2345 14 86
# description: snmp-relay services
#
### BEGIN INIT INFO
# Provides:      snmp-relay
# Required-Start: $network $syslog logging-server
# Required-Stop: $network $syslog logging-server
# Should-Start: mysql
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description:   start snmp-relay services
### END INIT INFO

if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi
[ -f /etc/sysconfig/snmp-relay ] && . /etc/sysconfig/snmp-relay
. /etc/init.d/ics_tools.sh

RELAY_BIN=/usr/local/sbin/snmp-relay.py
PYTHON_BIN=/opt/python-init/bin/python
RELAY_PID=/var/run/snmp-relay/snmp-relay.pid
SERVER_DIRS="/var/run/snmp-relay"

test -x ${RELAY_BIN} || exit 5
test -x ${PYTHON_BIN} || exit 5

rc_reset

export HOSTNAME=`/bin/hostname`
case "$1" in
    start)
	echo -n "Starting snmp-relay.py"
	if [ -f ${RELAY_PID} ] ; then
	    echo -n " ... already running"
	else
	    for dir in $SERVER_DIRS ; do
		[ ! -d "${dir}" ] && mkdir -p ${dir}
	    done
	    ${RELAY_BIN} ${RELAY_ARGS}
	fi
	rc_status -v
	;;
    stop)      
	echo -n "Stopping snmp-relay.py"
	if [ -f ${RELAY_PID} ] ; then
	    kill -s 15 `cat ${RELAY_PID} | head -n 1`
	    for i in $(seq 20) ; do
		[ ! -f ${RELAY_PID} ] && break
		echo -n "."
		sleep 2
	    done
	    [ $i -gt 16 ] && rc_failed || rc_reset
	else
	    rc_failed
	fi
	rc_status -v		
	;;
    force-stop)
	echo -n "Force stopping snmp-relay.py"
	if [ -f ${RELAY_PID} ] ; then
	    kill -9 `cat ${RELAY_PID} ` || rc_failed
	else
	    rc_failed
	fi
	rm -f ${RELAY_PID}
	rc_status -v
	;;
    status)
	echo -n "Checking snmp-relay.py..."
	check_threads_ok ${RELAY_PID} || {
	    check_threads ${RELAY_PID} || rc_failed 
	} 
	rc_status -v
	;;
    restart)
	echo "Restarting $(basename $RELAY_BIN)"
	$0 stop && sleep 2 ; $0 start || return=$rc_failed
	;;
    force-restart)
	echo "Restarting $(basename $RELAY_BIN)"
	$0 force-stop && sleep 2 ; $0 start || return=$rc_failed
	;;
    reload)
	echo -n "Reloading snmp-relay.py"
	if [ -f ${SERVER_PID} ] ; then
	    kill -HUP `cat ${RELAY_PID} | head -n 1` || rc_failed
	else
	    rc_failed
	fi
	rc_status -v
	;;
    *)
	echo "Usage: $0 {start|stop|restart|status|force-stop|force-restart|reload}"
	exit 1
	;;
esac

exit $return

