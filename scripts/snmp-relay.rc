#! /bin/bash
#
# Copyright (c) 2009,2012 Andreas Lang-Nevyjel init.at
#
#
# RedHat stuff
# chkconfig: 2345 14 86
# description: snmp-relay services
#
### BEGIN INIT INFO
# Provides:      snmp-relay
# Required-Start: $network $syslog logging-server
# Required-Stop: $network $syslog logging-server
# Should-Start: mysql
# Default-Start: 2 3 5
# Default-Stop: 0 1 6
# Description:   start snmp-relay services
### END INIT INFO

export SYSTEMD_NO_WRAP="1"
if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi
[ -f /etc/sysconfig/snmp-relay ] && . /etc/sysconfig/snmp-relay
. /etc/init.d/ics_tools.sh

# remove previous snmprelay pid directory
[ -d /var/run/snmprelay ] && rm -rf /var/run/snmprelay

RELAY_BIN=/opt/cluster/sbin/snmp-relay.py
PYTHON_BIN=/opt/python-init/bin/python
RELAY_PID=/var/run/snmp-relay/snmp-relay.pid
SERVER_DIRS="/var/run/snmp-relay"
META_FILE=/var/lib/meta-server/snmp-relay

test -x ${RELAY_BIN} || exit 5
test -x ${PYTHON_BIN} || exit 5

rc_reset

export HOSTNAME=`/bin/hostname`
case "$1" in
    start)
        echo -n "Starting snmp-relay.py"
        if [ -f ${RELAY_PID} ] ; then
            echo -n " ... already running"
        else
            for dir in $SERVER_DIRS ; do
            [ ! -d "${dir}" ] && mkdir -p ${dir}
            done
            ${RELAY_BIN} ${RELAY_ARGS}
        fi
        rc_status -v
        ;;
    stop)      
        echo -n "Stopping snmp-relay.py"
        if [ -f ${RELAY_PID} ] ; then
            if [ -f ${META_FILE} ] ; then
                /opt/cluster/sbin/get_pids_from_meta.py --meta ${META_FILE} --name snmp-relay.py --signal 15 --proc-name main
            else        
                kill -s 15 `cat ${RELAY_PID} | head -n 1` || rc_failed
            fi
            for i in $(seq 20) ; do
                [ ! -f ${RELAY_PID} ] && break
                echo -n "."
                sleep 2
            done
            [ $i -gt 16 ] && rc_failed || rc_reset
        else
            rc_failed
        fi
        rc_status -v		
        ;;
    force-stop)
        echo -n "Force stopping snmp-relay.py"
        if [ -f ${RELAY_PID} ] ; then
            if [ -f ${META_FILE} ] ; then
                /opt/cluster/sbin/get_pids_from_meta.py --meta ${META_FILE} --name snmp-relay.py --signal 9
            else        
                kill -s 9 `cat ${RELAY_PID} | head -n 1` || rc_failed
            fi
        else
            rc_failed
        fi
        rm -f ${RELAY_PID} ${META_FILE}
        sleep 1
        rc_status -v
        ;;
    status)
        echo -n "Checking snmp-relay.py..."
        check_threads_ok ${RELAY_PID} || {
            check_threads ${RELAY_PID} || rc_failed 
        } 
        rc_status -v
        ;;
    restart)
        echo "Restarting $(basename $RELAY_BIN)"
        $0 stop && sleep 2 ; $0 start || return=$rc_failed
        ;;
    force-restart)
        echo "Restarting $(basename $RELAY_BIN)"
        $0 force-stop && sleep 2 ; $0 start || return=$rc_failed
        ;;
    reload)
        echo -n "Reloading snmp-relay.py"
        if [ -f ${META_FILE} ] ; then
	        /opt/cluster/sbin/get_pids_from_meta.py --meta ${META_FILE} --name snmp-relay.py --signal 1 --proc-name main
        else
            rc_failed
        fi
        rc_status -v
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|force-stop|force-restart|reload}"
        exit 1
        ;;
esac

exit $return

